// <auto-generated />
using System;
using DotnetCoding.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetCoding.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextClass))]
    [Migration("20240917223304_UpdateChangeRequestEntity")]
    partial class UpdateChangeRequestEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotnetCoding.Core.Models.ChangeRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductQueueId")
                        .IsUnique();

                    b.ToTable("ChangeRequest", (string)null);
                });

            modelBuilder.Entity("DotnetCoding.Core.Models.ProductDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("PostedDate");

                    b.HasIndex("Price");

                    b.HasIndex("Status");

                    b.ToTable("ProductDetails", (string)null);
                });

            modelBuilder.Entity("DotnetCoding.Core.Models.ProductQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestReason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestedDate");

                    b.HasIndex("State");

                    b.ToTable("ProductQueue", (string)null);
                });

            modelBuilder.Entity("DotnetCoding.Core.Models.ChangeRequest", b =>
                {
                    b.HasOne("DotnetCoding.Core.Models.ProductQueue", "ProductQueue")
                        .WithOne("ChangeRequest")
                        .HasForeignKey("DotnetCoding.Core.Models.ChangeRequest", "ProductQueueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductQueue");
                });

            modelBuilder.Entity("DotnetCoding.Core.Models.ProductQueue", b =>
                {
                    b.HasOne("DotnetCoding.Core.Models.ProductDetails", "Product")
                        .WithMany("Queues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DotnetCoding.Core.Models.ProductDetails", b =>
                {
                    b.Navigation("Queues");
                });

            modelBuilder.Entity("DotnetCoding.Core.Models.ProductQueue", b =>
                {
                    b.Navigation("ChangeRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
